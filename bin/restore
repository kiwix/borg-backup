#!/bin/bash
#
# Author : Florent Kaisser <florent.pro@kaisser.name>
#
# ENV :
# - BW_CLIENTID: BitWarden API Key Client ID
# - BW_CLIENTSECRET: BitWarden API Key Secret

function usage {
    echo "Usage : $(basename $0) --name <repo-name> [--list|--extract <archive-name>]"  &&\
    echo -e "\t--name\t\tName of the existing backup repository" &&\
    echo -e "\t--list\t\tList all the available archives"
    echo -e "\t--extract\t\tExtract the content of the archive <archive-name>"
}

export BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK=yes
export MAX_BORGMATIC_RETRY=0 # just create the config, not execute Borgmatic
export ARCHIVE_NAME="latest"
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -n|--name)
    export BORGBASE_NAME="$2"
    shift # past argument
    shift # past value
    ;;
    -l|--list)
    list=true
    shift # past argument
    shift # past value
    ;;
    -e|--extract)
    archive="$2"
    extract=true
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    usage
    exit 1
    ;;
esac
done

if [[ -z $BORGBASE_NAME ]]
then
    echo "Please give a correct repository name"
    usage
    exit 1
fi

source ssh_config

init_config

if ! init_borgbase_repository.py
then
    exit 2
fi

repo_location=$(python3 -c 'from ruamel.yaml import YAML ; print(YAML().load(open("/root/.config/borgmatic/config.yaml"))["location"]["repositories"][0])')

if [ "$list" = true ]
then
    echo -e "\n\nList avaible archives ..."
    borg list "$repo_location"
fi

if [ "$extract" = true ]
then
    if [ $archive = latest ]
    then
        echo "Find the latest archive ..."
        archive=$(borg list "$repo_location" | tail -n1 | cut -d' '  -f1)
    fi

    if [ -z $archive ]
    then
        echo "No latest archive"
        exit 2
    fi

    echo "Extract $archive ..."

    cd /restore
    borg --info extract --list  "$repo_location::$archive"
fi

