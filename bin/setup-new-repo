#!/bin/bash
#
# Author : Florent Kaisser <florent.pro@kaisser.name>
#
# ENV :
# - BORGBASE_NAME : name of backup
# - BORGBASE_KEY : Borgbase API key

function generate_ssh_key {
    COMMENT=backup@${BORGBASE_NAME}
    ssh-keygen -t ${SSH_KEY_TYPE} -a ${SSH_KDF} -N '' -C ${COMMENT} -f ${SSH_PRIV_KEY_FILE}
}

function save_keys {
    SSH_PUB_KEY=`cat ${SSH_PUB_KEY_FILE}`
    SSH_PRIV_KEY=`cat ${SSH_PRIV_KEY_FILE}`
    LOGIN_ENTRY='{"username":"'"${SSH_PUB_KEY}"'","password":"'"${SSH_PRIV_KEY}"'"}'
    ID_ITEM=$(bw get template item |\
      jq '.name = "'${BORGBASE_NAME}'"' |\
      jq ".login = ${LOGIN_ENTRY}" |\
      jq '.fields = [{"name": "BORGBASE_KEY", "value":"'"${BORGBASE_KEY}"'"}]'|\
    bw encode | bw create item | jq -r ".id")
    export ID_ITEM
}

function share_key {
    echo -e "\nYour organizations:"
    bw list organizations | jq -r '.[] |  .id + " " + .name'
    echo -n "To share with a organization, please enter it id (leave blank for no share):"
    read -r id_org

    if [ -z $id_org ]
    then
        return
    fi

    bw list org-collections --organizationid $id_org | jq -r '.[] |  .id + " " + .name'
    echo -n "Please enter a collection id: "
    read -r id_col

    echo "Share key ..."
    echo '["'$id_col'"]' | bw encode | bw share $ID_ITEM $id_org > /dev/null
}

function main {

    bw logout

    until BW_SESSION=$(bw login --raw $BITWARDEN_EMAIL $BITWARDEN_PASSWORD)
    do
        echo "Please try again ..."
    done

    export BW_SESSION

    echo "Generate SSH key ..."
    generate_ssh_key

    echo "Save key to BitWarden"
    save_keys

    share_key

    create_ssh_config_file

    if [[ -z $BORGBASE_KEY ]]
    then
        echo -n "Your Borgbase API token (see https://www.borgbase.com/account?tab=2): "
        read -r BORGBASE_KEY
        export BORGBASE_KEY
    fi

    if ! init_borgbase_repository.py
    then
        exit 2
    fi
}

function usage {
    echo "Usage : $(basename $0) --name <repo-name> [--bitwarden <email>] [--alert-days <nb days>] [--quota <quota>] [--region <region>]" &&\
    echo -e "\t<repo-name>\tName of the backup repository to create" &&\
    echo -e "\t<email> \tBitwarden email" &&\
    echo -e "\t<nb days>\tPeriodicity of Borgbase alert in day(s) (default : 1)" &&\
    echo -e "\t<quota>\t\tQuota in Mo (no quota by default)" &&\
    echo -e "\t<region>\tServer region (eu or us) (default : eu)"
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -n|--name)
    export BORGBASE_NAME="$2"
    shift # past argument
    shift # past value
    ;;
    -b|--bitwarden)
    export BITWARDEN_EMAIL="$2"
    shift
    shift
    ;;
    -a|--alert-days)
    export ALERT="$2"
    shift
    shift
    ;;
    -q|--quota)
    export QUOTA=$2
    shift
    shift
    ;;
    -r|--region)
    export REGION=$2
    shift
    shift
    ;;
    *)    # unknown option
    usage
    exit 
    ;;
esac
done

if ! { [ "$REGION" = "eu" ] || [ "$REGION" = "us" ]; }
then
    echo "The region must be eu or us"
    usage
    exit 1
fi

if [[ -z $BORGBASE_NAME ]]
then
    echo "Please give a correct repository name"
    usage
    exit 1
fi

source ssh_config

main
