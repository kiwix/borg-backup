#!/bin/bash
#
# Author : Florent Kaisser <florent.pro@kaisser.name>
#
# ENV :
# - BORGBASE_NAME : name of backup
# - BORGBASE_KEY : Borgbase API key

source ssh_config

function generate_ssh_key {
    COMMENT=backup@${BORGBASE_NAME}
    ssh-keygen -t ${SSH_KEY_TYPE} -a ${SSH_KDF} -N '' -C ${COMMENT} -f ${SSH_PRIV_KEY_FILE}
}

function save_keys {
    SSH_PUB_KEY=`cat ${SSH_PUB_KEY_FILE}`
    SSH_PRIV_KEY=`cat ${SSH_PRIV_KEY_FILE}`
    LOGIN_ENTRY='{"username":"'"${SSH_PUB_KEY}"'","password":"'"${SSH_PRIV_KEY}"'"}'
    ID_ITEM=$(bw get template item |\
      jq '.name = "'${BORGBASE_NAME}'"' |\
      jq ".login = ${LOGIN_ENTRY}" |\
      jq '.fields = [{"name": "BORGBASE_KEY", "value":"'"${BORGBASE_KEY}"'"}]'|\
    bw encode | bw create item | jq -r ".id")
    export ID_ITEM
}

function share_key {
    bw list organizations | jq -r '.[] |  .id + " " + .name'
    echo -n "To share with a organization, please enter it id (leave blank for no share):"
    read id_org

    if [ -z $id_org ]
    then
        return
    fi

    bw list org-collections --organizationid $id_org | jq -r '.[] |  .id + " " + .name'
    echo -n "Please enter a collection id: "
    read id_col

    echo "Share key ..."
    echo '["'$id_col'"]' | bw encode | bw share $ID_ITEM $id_org > /dev/null
}

until BW_SESSION=$(bw login --raw $BW_EMAIL $BW_PASSWORD)
do
    echo "Please try again ..."
done

export BW_SESSION

echo "Generate SSH key ..."
generate_ssh_key

echo "Save key to BitWarden"
save_keys

share_key

create_ssh_config_file

if ! init_borgbase_repository.py
then
    exit 2
fi
