#!/bin/bash
#
# Author : Florent Kaisser <florent.pro@kaisser.name>
#
# ENV :
# - BORGBASE_NAME : name of backup
# - BORGBASE_KEY : Borgbase API key

SSH_DIR=`pwd`/.ssh
SSH_PRIV_KEY_FILE=${SSH_DIR}/${BORGBASE_NAME}_id
SSH_PUB_KEY_FILE=${SSH_PRIV_KEY_FILE}.pub
SSH_KEY_TYPE=ed25519
SSH_KDF=100

function create_ssh_config_file {
    export KNOWN_HOSTS_FILE=${SSH_DIR}/known_hosts
    CONFIG_FILE=${SSH_DIR}/config

    echo -e \
    "Host *.borgbase.com\n" \
    "  IdentityFile ${SSH_PRIV_KEY_FILE}\n" \
    "  UserKnownHostsFile ${KNOWN_HOSTS_FILE}" \
    > ${CONFIG_FILE}

    chmod 600 ${CONFIG_FILE}
}

function generate_ssh_key {
    COMMENT=backup@${BORGBASE_NAME}
    rm ${SSH_PRIV_KEY_FILE}* ${KNOWN_HOSTS_FILE} ${CONFIG_FILE}
    ssh-keygen -t ${SSH_KEY_TYPE} -a ${SSH_KDF} -N '' -C ${COMMENT} -f ${SSH_PRIV_KEY_FILE}
}

function save_config {
    SSH_PUB_KEY=`cat ${SSH_PUB_KEY_FILE}`
    SSH_PRIV_KEY=`cat ${SSH_PRIV_KEY_FILE}`
    LOGIN_ENTRY='{"username":"'"${SSH_PUB_KEY}"'","password":"'"${SSH_PRIV_KEY}"'"}'
    bw get template item |\
      jq '.name = "'${BORGBASE_NAME}'"' |\
      jq ".login = ${LOGIN_ENTRY}" |\
      jq '.fields = [{"name": "BORGBASE_KEY", "value":"'"${BORGBASE_KEY}"'"}]'|\
    bw encode | bw create item

    create_ssh_config_file
}

bw logout

until BW_SESSION=`bw login --raw`
do
    echo "Please try again ..."
done

export BW_SESSION

echo "Generate SSH key ..."
generate_ssh_key

echo "Save key to BitWarden"
save_config

if ! init_borgbase_repository.py
then
    exit 2
fi
